@use "sass:math";

// px to percent
@function percent($px, $from) {
   $result: math.div($px, $from) * 100%;
   @return $result;
}

// px to rem
@function rem($px) {
   $result: math.div($px, 16) + rem;
   @return $result;
}

// px to em
@function em($px, $current: 16) {
   $result: math.div($px, $current) + em;
   @return $result;
}


// adaptive property
@mixin adaptive-property($property, $startSize, $minSize, $widthFrom: $containerWidth, $widthTo: $minWidth, $keepSize: 0) {
   @if ($startSize==0) {
      $startSize: 0.000001;
   }
   @if ($minSize==0) {
      $minSize: 0.000001;
   }

   // calc();
   $addSize: math.div($startSize - $minSize, 16);

   @if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {
      $widthFrom: $maxWidth;
   }

   // EM break points
   $widthFromMedia: em($widthFrom);
   $widthToMedia: em($widthTo);

   // float formula
   $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
   $yIntersection: -$widthTo * $slope + $minSize;
   @if ($yIntersection==0) {
      $yIntersection: 0.000001;
   }
   $flyValue: #{rem($yIntersection)}" + " #{$slope * 100}vw;

   // get property value
   $propertyValue: #{"clamp(" rem($minSize) "," $flyValue "," rem($startSize) ")"};
   // if negative values
   @if ($minSize > $startSize) {
      $propertyValue: #{"clamp(" rem($startSize) "," $flyValue "," rem($minSize) ")"};
   }

   // clamp is supported
   @supports (#{$property}: $propertyValue) {
      #{$property}: $propertyValue;
   }
   // clamp is not supported
   @supports not (#{$property}: $propertyValue) {
      #{$property}: calc(#{rem($minSize)} + #{$addSize} * (100vw - #{rem($widthTo)}) / #{math.div($widthFrom, 16) - math.div($widthTo, 16)});
   }

   // setting default values
   @if $widthFrom != $containerWidth and $widthFrom != $maxWidth and $keepSize != 1 and $keepSize != 2 {
      @media (min-width: $widthFromMedia) {
         #{$property}: inherit;
      }
   }
   @if $widthTo != $minWidth and $keepSize != 1 and $keepSize != 3 {
      @media (max-width: $widthToMedia) {
         #{$property}: inherit;
      }
   }
}
